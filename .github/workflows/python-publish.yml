# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

# permissions read?
jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest]
        # windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
            python-version: '<3.11'
    - name: Install dependencies
      run: python -m pip install --upgrade pip build twine
    - name: Build package
      run: |
        python -m build
        twine check --strict dist/*
    - name: Create artifact for release job
      uses: actions/upload-artifact@v2
      with:
        name: dist_folder
        path: dist/
    - name: Install package
      run: pip install dist/*.whl
    - name: Run tests
      run: |
        pip install pytest
        python -c "import os; print(os.getcwd())"
        cd tests
        python -m pytest -W ignore::DeprecationWarning -p no:cacheprovider
  release:
    needs: build
    # if: startsWith(github.ref, 'refs/tags/') # if a new tag is pushed
    runs-on: ubuntu-latest
    # permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      # id-token: write
    steps:
    # - name: Publish package to pypi
    #   uses: pypa/gh-action-pypi-publish@release/v1
    #   with:
    #     password: ${{ secrets.IGM_TOKEN }}
    #     repository-url: https://upload.pypi.org/legacy/
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: dist_folder
    - name: Check if dist folder exists
      run: |
        ls -l
        ls -l dist
    - name: Publish package to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
